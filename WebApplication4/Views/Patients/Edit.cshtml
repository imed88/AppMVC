@model WebApplication4.Models.Tables.Patients
<section class="content-header">
    <h1>
        Infirmerie
        <small>Patients</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Accueil</a></li>
        <li>Patients</li>
        <li class="active">Editer</li>
    </ol>
</section>

<!-- Main content -->
<div class="container-fluid">
    <section class="content">
        <div class="row">

            <h2>Modifier l'élément</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IdPatients)
                <div class="form-group">
                    @Html.LabelFor(model => model.MatriculePatients, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.MatriculePatients, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MatriculePatients, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NomPatient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.NomPatient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomPatient, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PrenomPatient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PrenomPatient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrenomPatient, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Sexe", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                        <div class="editor-field">
                            @Html.DropDownList("Gender", new List<SelectListItem>
                               {
                                   new SelectListItem{ Text="Masculin", Value="Masculin"},
                                   new SelectListItem{ Text="Féminin", Value="Féminin"}
                               }, "--- Séléctionner un élément ---", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhonePatients, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PhonePatients, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhonePatients, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Date de naissance", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Lien de parenté", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                        <div class="editor-field">
                            @Html.DropDownList("Parente", new List<SelectListItem>
                               {
                                   new SelectListItem{ Text="Ascendant(e)", Value="Ascendant(e)"},
                                   new SelectListItem{ Text="Descendant(e)", Value="Descendant(e)"},

                               }, "--- Séléctionner un élément ---", new { @class = "form-control" })
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Maladie Chronique", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                        Oui
                        @Html.RadioButtonFor(model => model.MaladieChronique, "Oui")
                        Non
                        @Html.RadioButtonFor(model => model.MaladieChronique, "Non")
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("APCI", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                        Oui
                        @Html.RadioButtonFor(model => model.APCI, "Oui")
                        Non
                        @Html.RadioButtonFor(model => model.APCI, "Non")
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.IdUsine, "IdUsine", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Usine", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("IdUsine", null, htmlAttributes: new { @class = "form-control", @id = "Usine" })
                        @Html.ValidationMessageFor(model => model.IdUsine, "", new { @class = "text-danger" })
                    </div>
                </div><div class="form-group">
                    @*@Html.LabelFor(model => model.IdUsine, "IdUsine", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Dossier de patient", htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-6">
                              <ul class="attachment">
                                  @foreach (var item in Model.FileDetails)
                                  {
                                  <li>
                                      <a class="title" href="/Patients/Download/?p=@(item.Id + item.Extension)&d=@item.FileName">@item.FileName</a>
                                      <a href="@Url.Action("DeleteFile", "Patients")">
                                         
                                          <span>
                                              <strong>x</strong>
                                          </span>
                                      </a>
                                  </li>

                                  }
                              </ul>
                          </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Modifier" class="btn btn-warning" />|   @*@Html.ActionLink("Retour", "Index")*@
                        <a href="@Url.Action("Index", "Patients")" class="btn btn-default">
                            <i class="glyphicon glyphicon glyphicon-chevron-left"></i>
                            <span>
                                <strong>Retour</strong>
                            </span>
                        </a>
                    </div>
                </div>
            </div>
            }
            @*<div>
            @Html.ActionLink("Retour", "Index")
        </div>*@
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <script>
        $(function () {


                       $("#Usine").chosen();
        });

                </script>
            }
        </div>
    </section>
</div>