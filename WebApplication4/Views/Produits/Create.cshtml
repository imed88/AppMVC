@model WebApplication4.Models.Tables.ShopCart.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/adminlte/_mainLayout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Produits", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodePCT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodePCT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodePCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categorie, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
            @Html.EditorFor(model => model.Categorie, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Categorie, "", new { @class = "text-danger" })
        </div>*@
            <div class="col-md-6">
                <div class="editor-field">
                    @Html.DropDownList("Categorie", new List<SelectListItem>
                       {
                           new SelectListItem{ Text="V", Value="V"},
                           new SelectListItem{ Text="I", Value="I"},
                           new SelectListItem{ Text="E", Value="E"},
                       }, "--- Séléctionner un élément ---", new { @class = "form-control" })
                </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DenominationCI, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DenominationCI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DenominationCI, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AP, htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-md-10">
            @Html.EditorFor(model => model.AP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AP, "", new { @class = "text-danger" })
        </div>*@
                <div class="col-md-6">
                    <div class="editor-field">
                        @Html.DropDownList("AP", new List<SelectListItem>
                           {
                               new SelectListItem{ Text="N", Value="N"},
                               new SelectListItem{ Text="O", Value="O"},
                           }, "--- Séléctionner un élément ---", new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
                    <input type="file" name="UploadFile" required />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
